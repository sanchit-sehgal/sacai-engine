Instructions for building Leela (both plain EXE and enhanced DLL for use with Ceres).

1. Clone latest git repo from Github.

2. Modify build.bat in obvious ways to select which backends and path to CUDA/CUDNN.
   Example: changed these 3 lines (probably Cuda 11.1 or 11.2 will both work).
     set CUDNN=true
     set CUDA_PATH=C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v11.1
     set CUDNN_PATH=C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v11.1
   Possibly also the path to Visual Studio needs to be changed, 
   for example perhaps "Community" needs to be changed to "Preview" if running preview edition.

3. Make sure Meson is up-to-date.

4. Run build. Will seem to show one error at end, it's ok....

5. Launch Visual Studio 2019. Modify project file to set C/C++/General/Additional include Directories to reference CUDA 11
	C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v11.1\include;%(AdditionalIncludeDirectories)

6. Now build in Visual Studio. Works fine, generates the usual LC0 executable.
   Maybe save a copy of this plain EXE or whole build directory somewhere (build_exe)

7. Modify network_cuda.cc file with Ceres custom logic
   (just overwrite this file with the replacement version).
   There are 3 places
     - some data structures near top of file (outside Leela namespace)
     - some worker code at end of namespace in file
     - some final code (external C routines) at end of file (outside leela namespace)

 8. Now build again. Copy the output binary (which might still be called LC0.EXE)
    into the directory where the standard package of Leela Chess executables
    was installed, under the name LC0.DLL.


Side note: I also copied these DLLs into the netcore5.0 directory where Ceres runs from.
This is probably not necessary.

C:\dev\Ceres\artifacts\release\net5.0>copy \dev\lc0\master1\lc0\build\cu*.dll
\dev\lc0\master1\lc0\build\cublas64_11.dll
\dev\lc0\master1\lc0\build\cublasLt64_11.dll
\dev\lc0\master1\lc0\build\cudart64_110.dll
\dev\lc0\master1\lc0\build\cudnn64_8.dll
\dev\lc0\master1\lc0\build\cudnn_cnn_infer64_8.dll
\dev\lc0\master1\lc0\build\cudnn_ops_infer64_8.dll